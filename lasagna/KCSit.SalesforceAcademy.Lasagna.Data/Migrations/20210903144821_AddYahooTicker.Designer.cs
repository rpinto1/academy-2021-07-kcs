// <auto-generated />
using System;
using KCSit.SalesforceAcademy.Lasagna.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KCSit.SalesforceAcademy.Lasagna.Data.Migrations
{
    [DbContext(typeof(lasagnakcsContext))]
    [Migration("20210903144821_AddYahooTicker")]
    partial class AddYahooTicker
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.BalanceSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccountsPayable")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("AccountsReceivable")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("AllowanceLoanLosses")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Aoci")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("AOCI");

                    b.Property<decimal?>("CapitalLeases")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashAndEquivalents")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CommonStock")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CurrentDeferredRevenue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DeferredPolicyCost")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DepositsLiability")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("FuturePolicyBenefits")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Goodwill")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("GrossLoans")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Inventories")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Investments")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("LongTermDebt")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetLoans")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NonCurrentDeferredRevenue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherCurrentAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherCurrentLabilities")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherIntangibleAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherLiabilities")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PropertyPlantAndEquipment")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("RetainedEarnings")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ShareholdersEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ShortTermDebt")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ShortTermInvestments")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TaxPayable")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalCurrentAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalCurrentLiabilities")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalInvestments")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalLiabilities")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalLiabilitiesAndEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("UnearnedIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("UnearnedPremiums")
                        .HasColumnType("decimal(22,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("BalanceSheets");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.CashFlowStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Acquisitions")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashFinancing")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashFromInvesting")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashFromOperations")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashPaidForDividends")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ChangeInDeferredTax")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ChangeInWorkingCapital")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DepreciationAmortization")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Investements")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIssuanceOfCommonStock")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIssuanceOfDebt")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherFinancing")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherInvesting")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherOperations")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PropertyPlantEquipment")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("StockBasedCompensation")
                        .HasColumnType("decimal(22,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("CashFlowStatements");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("DailyInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<int>("ExchangeId")
                        .HasColumnType("int");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("YahooTicker")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DailyInfoId");

                    b.HasIndex("ExchangeId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("SectorId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.CompanyIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("IndexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IndexId");

                    b.ToTable("CompanyIndex");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.DailyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("PreviousClose")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DailyInfo");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.IncomeStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CostOfGoodsSold")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CreditLossesProvision")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Development")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Epsbasic")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EPSBasic");

                    b.Property<decimal?>("Epsdiluted")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EPSDiluted");

                    b.Property<decimal?>("FeesOtherIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("IncomeTax")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("InterestExpense")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetInterestAclp")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("NetInterestACLP");

                    b.Property<decimal?>("NetInterestIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetInterestIncomeBank")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIvestmentIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OperatingProfit")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherNonOperatingIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OtherOperatingExpense")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PolicyClaims")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PolicyExpense")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PreTaxIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("SalesGeneralAdministrative")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("SharesBasic")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("SharesDiluted")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalInterestExpense")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalInterestIncome")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalNonInterestExpense")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalNoninterestRevenue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalOperatingExpenses")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalPremiums")
                        .HasColumnType("decimal(22,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("IncomeStatements");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Index", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Index");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.HasIndex(new[] { "Name" }, "IX_Sub_Industries")
                        .IsUnique();

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.KeyRatio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AssetsToEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("BookValue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("BookValuePerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CapitalExpendituresGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("CashFromOperationsGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DebtToAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DebtToEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DilutedEpsgrowth")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("DilutedEPSGrowth");

                    b.Property<decimal?>("DilutedSharesGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DividendsPerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("EarningAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("EarningAssetsGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("EarningAssetsToEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Ebidtagrowth")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EBIDTAGrowth");

                    b.Property<decimal?>("Ebidtamargin")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EBIDTAMargin");

                    b.Property<decimal?>("EbidtaperShare")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EBIDTAPerShare");

                    b.Property<decimal?>("EquityGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("EquityToAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("FreeCashFlow")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("FreeCashFlowGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("FreeCashFlowPerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("FreeCashMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("GrossLoansGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("GrossMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("GrossProfitGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("LoanDeposit")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("LoanLossReverseLoans")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("MarketCapitalization")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetIncomeGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetInterestIncomeGrowthBank")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetInterestMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetLoansGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("NetMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OperatingIncomeGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OperatingIncomePerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("OperatingMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PayoutRatio")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PolicyRevenue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PolicyRevenueGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Ppegrowth")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("PPEGrowth");

                    b.Property<decimal?>("PremiumGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PremiumShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PretaxIncomeGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PretaxMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PriceToBook")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PriceToEarnings")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("PriceToSales")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ReturnOnAssets")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ReturnOnCapitalEmployed")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ReturnOnEquity")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ReturnOnInvestedCapital")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("ReturnOnTangibleCapitalEmployed")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("RevenueGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("RevenuePerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Roi")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("ROI");

                    b.Property<decimal?>("TangibleBookValue")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TangibleBookValuePerShare")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalAssetsGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalDepositGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("TotalInvestmentsGrowth")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("UnderwritingMargin")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("UnderwritingProfit")
                        .HasColumnType("decimal(22,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("KeyRatios");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.KeyStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AssetsCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("AssetsCAGR");

                    b.Property<decimal?>("AssetsEquityMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebtAssetsMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DebtEquityMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("DepositsCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("DepositsCAGR");

                    b.Property<decimal?>("EarningAemedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EarningAEMedian");

                    b.Property<decimal?>("EarningAssetsCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EarningAssetsCAGR");

                    b.Property<decimal?>("Ebitmedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EBITMedian");

                    b.Property<decimal?>("Epscagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("EPSCAGR");

                    b.Property<decimal?>("EquityAssetsMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("Fcfcagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("FCFCAGR");

                    b.Property<decimal?>("Fcfmedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("FCFMedian");

                    b.Property<decimal?>("GrossLoansCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("GrossLoansCAGR");

                    b.Property<decimal?>("GrossProfitMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("LoanLossRtlmedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("LoanLossRTLMedian");

                    b.Property<decimal?>("NetInterestIncomeCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("NetInterestIncomeCAGR");

                    b.Property<decimal?>("Nimmedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("NIMMedian");

                    b.Property<decimal?>("PermiumCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("PermiumCAGR");

                    b.Property<decimal?>("PreTaxIncomeMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<decimal?>("RevenueCagr")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("RevenueCAGR");

                    b.Property<decimal?>("Roamedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("ROAMedian");

                    b.Property<decimal?>("Roemedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("ROEMedian");

                    b.Property<decimal?>("Roicmedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("ROICMedian");

                    b.Property<decimal?>("Roimedian")
                        .HasColumnType("decimal(22,2)")
                        .HasColumnName("ROIMedian");

                    b.Property<decimal?>("UnderwritingMedian")
                        .HasColumnType("decimal(22,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("KeyStatistics");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.PortfolioCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioCompanies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MarginOfSafety")
                        .HasColumnType("decimal(10,2)");

                    b.Property<double?>("Score1")
                        .HasColumnType("float")
                        .HasColumnName("Score");

                    b.Property<int?>("ScoringMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StickerPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ScoringMethodId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.ScoringMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ScoringMethods");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Industries")
                        .IsUnique();

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.YearlyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalanceSheetId")
                        .HasColumnType("int");

                    b.Property<int?>("CashFlowStatementId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeStatementId")
                        .HasColumnType("int");

                    b.Property<int?>("KeyRatioId")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BalanceSheetId");

                    b.HasIndex("CashFlowStatementId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IncomeStatementId");

                    b.HasIndex("KeyRatioId");

                    b.ToTable("YearlyReports");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Company", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Country", "Country")
                        .WithMany("Companies")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Companies_Countries")
                        .IsRequired();

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.DailyInfo", "DailyInfo")
                        .WithMany("Companies")
                        .HasForeignKey("DailyInfoId")
                        .HasConstraintName("FK_Companies_DailyInfo");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Exchange", "Exchange")
                        .WithMany("Companies")
                        .HasForeignKey("ExchangeId")
                        .HasConstraintName("FK_Companies_Exchanges")
                        .IsRequired();

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Industry", "Industry")
                        .WithMany("Companies")
                        .HasForeignKey("IndustryId")
                        .HasConstraintName("FK_Companies_Industries1");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Sector", "Sector")
                        .WithMany("Companies")
                        .HasForeignKey("SectorId")
                        .HasConstraintName("FK_Companies_Industries")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("DailyInfo");

                    b.Navigation("Exchange");

                    b.Navigation("Industry");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.CompanyIndex", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Company", "Company")
                        .WithMany("CompanyIndices")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_CompanyIndex_Companies");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Index", "Index")
                        .WithMany("CompanyIndices")
                        .HasForeignKey("IndexId")
                        .HasConstraintName("FK_CompanyIndex_Index");

                    b.Navigation("Company");

                    b.Navigation("Index");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Industry", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Sector", "Sector")
                        .WithMany("Industries")
                        .HasForeignKey("SectorId")
                        .HasConstraintName("FK_Sub_Industries_Industries")
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.KeyStatistic", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Company", "Company")
                        .WithMany("KeyStatistics")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_KeyStatistics_Companies")
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Portfolio", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", "User")
                        .WithMany("Portfolios")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Portfolios_AspNetUsers")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.PortfolioCompany", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Company", "Company")
                        .WithMany("PortfolioCompanies")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_PortfolioCompanies_Companies")
                        .IsRequired();

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Portfolio", "Portfolio")
                        .WithMany("PortfolioCompanies")
                        .HasForeignKey("PortfolioId")
                        .HasConstraintName("FK_PortfolioCompanies_Portfolios")
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Score", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Company", "Company")
                        .WithMany("Scores")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Scores_Companies");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ScoringMethod", "ScoringMethod")
                        .WithMany("Scores")
                        .HasForeignKey("ScoringMethodId")
                        .HasConstraintName("FK_Scores_ScoringMethods");

                    b.Navigation("Company");

                    b.Navigation("ScoringMethod");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.YearlyReport", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.BalanceSheet", "BalanceSheet")
                        .WithMany("YearlyReports")
                        .HasForeignKey("BalanceSheetId")
                        .HasConstraintName("FK_YearlyReports_BalanceSheets1");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.CashFlowStatement", "CashFlowStatement")
                        .WithMany("YearlyReports")
                        .HasForeignKey("CashFlowStatementId")
                        .HasConstraintName("FK_YearlyReports_CashFlowStatements");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.Company", "Company")
                        .WithMany("YearlyReports")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_YearlyReports_Companies")
                        .IsRequired();

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.IncomeStatement", "IncomeStatement")
                        .WithMany("YearlyReports")
                        .HasForeignKey("IncomeStatementId")
                        .HasConstraintName("FK_YearlyReports_IncomeStatements");

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.KeyRatio", "KeyRatio")
                        .WithMany("YearlyReports")
                        .HasForeignKey("KeyRatioId")
                        .HasConstraintName("FK_YearlyReports_KeyRatios");

                    b.Navigation("BalanceSheet");

                    b.Navigation("CashFlowStatement");

                    b.Navigation("Company");

                    b.Navigation("IncomeStatement");

                    b.Navigation("KeyRatio");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.ApplicationUser", b =>
                {
                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.BalanceSheet", b =>
                {
                    b.Navigation("YearlyReports");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.CashFlowStatement", b =>
                {
                    b.Navigation("YearlyReports");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Company", b =>
                {
                    b.Navigation("CompanyIndices");

                    b.Navigation("KeyStatistics");

                    b.Navigation("PortfolioCompanies");

                    b.Navigation("Scores");

                    b.Navigation("YearlyReports");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Country", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.DailyInfo", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Exchange", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.IncomeStatement", b =>
                {
                    b.Navigation("YearlyReports");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Index", b =>
                {
                    b.Navigation("CompanyIndices");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Industry", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.KeyRatio", b =>
                {
                    b.Navigation("YearlyReports");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Portfolio", b =>
                {
                    b.Navigation("PortfolioCompanies");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.ScoringMethod", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("KCSit.SalesforceAcademy.Lasagna.Data.Sector", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Industries");
                });
#pragma warning restore 612, 618
        }
    }
}
